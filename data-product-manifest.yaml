version: 0.0.6
jobId: "112"
jobName: SADP_Requisition_Details
jobType: Source Aligned Data Product
domain: marketing
alias: Load_data_to_table
discoveryPort:
  name: SADP_Requisition_Details
inputPorts:
  - alias: Vendor_Master_1
    isDynamic: true
    path: s3://byte-etl-externaldemo/shell-sample-data/Vendor_Master_output.csv
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Shell Demo S3 Connection
      dataSetUrn: urn:dv:dataset:a218a716-597a-4234-8d2f-6980e5eec258
    type: inputDelimited
  - alias: Material_Master_1
    isDynamic: true
    path: s3://byte-etl-externaldemo/shell-sample-data/Material_Master_output.csv
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Shell Demo S3 Connection
      dataSetUrn: urn:dv:dataset:f76fa30b-a66e-4659-97d7-56a4ae7586f0
    type: inputDelimited
  - alias: Purchase_Requisition_1
    isDynamic: true
    path: s3://byte-etl-externaldemo/shell-sample-data/Purchase_Requisition_output.csv
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Shell Demo S3 Connection
      dataSetUrn: urn:dv:dataset:aff27224-7a15-4b18-9a78-5934e4443b95
    type: inputDelimited
productState:
  isDynamic: true
  alias: Load_data_to_table
  retentionVersions: ""
  logicalSchema: ""
  stateStoreType: loadDataIceberg
  isProfilingEnabled: false
  updateStrategy: Overwrite
  tableName: s3source.requisition_details
  warehousePath: s3://bp-spark-sql-library-test-acc/
  catalogName: s3Source
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: false
    enforceSchemaMethod: Warning
    catalogType: glue
  refreshInterval: None
transformation:
  - isDynamic: true
    alias: Spark_SQL_1
    description: Main query
    sequence: 4
    inputDataFrameList:
      - inputDataFrame: Vendor_Master_1
        tempViewName: vendor_master
      - inputDataFrame: Material_Master_1
        tempViewName: material_master
      - inputDataFrame: Purchase_Requisition_1
        tempViewName: purchase_requisition
    query: select pr.`Purchase Requisition Number`, pr.`Item Number of Purchase
      Requisition`, pr.`Desired Vendor`, pr.`Fixed Vendor`, pr.`Number of
      Purchasing Info Record`, vm.`Vendor Name`, vm.`Vendor ID`, vm.`Vendor
      Type`, vm.`Client ID`, vm.`Client Name`, mm.`Material Number`,
      mm.`Material Description`, mm.`Material Type` from purchase_requisition pr
      left join vendor_master vm on vm.`Material Number Used by Vendor` =
      pr.`Material Number` and vm.`Purchase Info record number` = pr.`Number of
      Purchasing Info Record` and vm.`Vendor Name` = pr.`Fixed Vendor` left join
      material_master mm on mm.`Material Number` = pr.`Material Number`
    optional:
      persistDataFrame: false
    type: operationThroughSqlQuery
controlPort:
  dataQualityRules: {}
